<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.CustomerMapper">
	
	
	<!-- 고객 추가 -->
	<insert id="insertCustomer" parameterType="java.util.Map">
		INSERT INTO customer(
	         store_id,
	         first_name,
	         last_name,
	         email,
	         address_id,
	         active,
	         create_date
      ) VALUES (
	         #{storeId},
	         #{firstName},
	         #{lastName},
	         #{email},
	         #{addressId},
	         #{active},
	         NOW()
      )
   </insert>
	
	
	
	<!-- 상세보기 -->
	<select id="selectCustomerOne" resultType="java.util.Map" parameterType="Integer">
		SELECT
			ID,
			name,
			address,
			`zip code` zipCode,
			phone,
			city,
			country,
			notes,
			SID
		FROM
			customer_list
		WHERE ID = #{ID}		
	</select>
	
	
	<!-- 블랙 리스트 -->
	<select id="selectBlackCustomerList" resultType="java.util.Map"> <!-- #으로 들어가는 값이 없기때문에 파라미터 x -->
		SELECT 
			c.customer_id ID, 
			CONCAT(c.first_name,' ',c.last_name) AS NAME,
			COUNT(*) AS overdue
		FROM customer c, rental r, inventory i, film f
		WHERE c.customer_id = r.customer_id
			AND r.inventory_id = i.inventory_id
			AND i.film_id = f.film_id
			AND DATEDIFF(r.return_date, r.rental_date) > f.rental_duration
		GROUP BY NAME
		HAVING COUNT(*) > 20
	</select>
	
	
	<!-- 고객 리스트 -->
	<select id="selectCustomerList" resultType="com.gd.sakila.vo.CustomerList" parameterType="java.util.Map">
		SELECT 
			ID ID,
			name name,
			address address,
			`zip code` zipCode,
			phone phone,
			city city,
			country country,
			notes notes,
			SID SID
		FROM customer_list
		<where>
			<if test="searchWord != null">
				AND name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY ID DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	
	<!-- Total리스트 -->
	<select id="selectCustomerTotal" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*)
		FROM customer_list
		<where>
			<if test="searchWord != null">
				AND name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	
	
	<update id="updateCustomerActiveByScheduler">
		UPDATE customer
		SET active = 0
		WHERE customer_id In ( SELECT customer_id 
							    FROM rental
							    GROUP BY customer_id
							    HAVING DATEDIFF(NOW(), MAX(rental_date)) > 365)	
	</update>
</mapper>